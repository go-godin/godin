// Code generated by godin. DO NOT EDIT.
package endpoint

{{- $project := .Project }}
{{- $protobuf := .Protobuf }}
{{- $server := .Module }}
{{- $tpl := .Template }}

import (
    "context"
    "github.com/go-kit/kit/endpoint"

    . "{{ $project.Module }}/internal/{{ $project.Service.Name }}"
)

{{ range $protobuf.Services }}
type Set struct {
    {{ range .RPCs }}
    {{.Name}}Endpoint endpoint.Endpoint
    {{- end }}
}

func NewEndpointSet(svc Service) Set {
    {{ range .RPCs }}
    var {{ lower .Name }} endpoint.Endpoint
    {
        {{ lower .Name }} = Make{{.Name}}Endpoint(svc)
    }
    {{- end }}

    return Set{
        {{- range .RPCs }}
        {{.Name}}Endpoint: {{ lower .Name}},
        {{- end }}
    }
}

{{ range .RPCs }}
{{- $req := ($protobuf.GetMessage .RequestType) }}
{{- $res := ($protobuf.GetMessage .ResponseType) }}

func (s Set) {{.Name}}(ctx context.Context, {{ $req.FieldList }}) ({{ $res.FieldList}}, err error) {
    resp, err := s.{{.Name}}Endpoint(ctx, {{$req.Name}}{ {{ $req.FieldStructInit }} })
}
{{- end }}

{{- end }}
